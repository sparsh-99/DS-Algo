/*
link for the problem- https://leetcode.com/problems/divisor-game/
problem description-

Alice and Bob take turns playing a game, with Alice starting first.

Initially, there is a number n on the chalkboard. On each player's turn, that player makes a move consisting of:

Choosing any x with 0 < x < n and n % x == 0.
Replacing the number n on the chalkboard with n - x.
Also, if a player cannot make a move, they lose the game.

Return true if and only if Alice wins the game, assuming both players play optimally.

 

Example 1:

Input: n = 2
Output: true
Explanation: Alice chooses 1, and Bob has no more moves.


soltuion-
*/
class Solution {
    public boolean divisorGame(int n) {
    // O(1) solution
        //  if(n%2==0) return true;
       // else return false;
 
        // O(n) solution

        if (n==1) return false;
        if (n==2) return true;
       
        for (int i=1;i<=n;i++){
            if (n%i == 0)
                return !(divisorGame(n-i));
       }
        return false;
  
    }
}


